Project Workflow Guide (Static HTML Site)

This guide outlines the file structure and workflow for your personal website, designed for hosting HTML/JavaScript applications and other static content.

1. The File Structure

- /games/: Contains the source code for your individual HTML/JavaScript games.
  - /minesweeper/: Source files for the Minesweeper game.
- /src/: Contains the source files for your main portfolio website.
  - index.html: The main page template.
  - data.json: Data for trades, blog posts, and the list of games.
- /dist/: The distribution folder. This contains the final, deployable version of your site. **You should not edit files in here directly.**
- README.md: Project description.

2. The Development Workflow

The process involves developing in your source folders and then copying the finished files into the `dist` folder for deployment.

Step 1: Develop

- To work on your main website: Edit the files in the `/src/` directory. You can open `src/index.html` in your browser to preview your changes.
- To work on a game: Edit the game files directly within their folders (e.g., in `/games/minesweeper/`).

Step 2: Assemble the Final Website (The "Build" Step)

This step collects all your source files into the `/dist/` folder.

1.  **Clear the `dist` folder:** Delete everything inside it to ensure a clean build.
2.  **Copy website files:** Copy `index.html` and `data.json` from `/src/` into `/dist/`.
3.  **Copy game files:** Copy your game project folder (e.g., `games/minesweeper`) into the `dist/` folder.

After this step, your `/dist/` folder will be perfectly organized for deployment:

dist/
├── index.html
├── data.json
└── minesweeper/
    ├── index.html
    └── (and any other game assets like CSS or JS)

Step 3: Deploy

Upload the entire contents of the `/dist/` folder to your static hosting provider (like GitHub Pages). Your main `index.html` will then correctly link to your game at the path you defined in `data.json` (e.g., `./minesweeper/`).

3. How to Add a New Game

1.  Create a new folder for your game inside the `/games/` directory (e.g., `games/new-cool-game/`).
2.  Add your game's HTML, CSS, and JavaScript files to that new folder.
3.  Add a new entry for your game in `src/data.json`. This will make it appear on your website's "Games" page.
    ```json
    {
      "name": "My New Cool Game",
      "description": "A brief description of the game.",
      "path": "./new-cool-game/"
    }
    ```
4.  Follow the "Build" steps to copy the new game files into the `dist/` folder.
5.  Deploy the updated `dist` folder.
